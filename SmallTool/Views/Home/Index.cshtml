@model ImmutableList<BranchTuple>
@{
    ViewData["Title"] = "Builds";
}

@* <div class="text-center" xmlns="http://www.w3.org/1999/html"> *@
@*     <h1 class="display-4">Welcome</h1> *@
@*     <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p> *@
@* </div> *@
  <div class="row row-cols-1 row-cols-md-3 mb-3 text-center">
    <div class="col-sm-4 padding-0">
      <div class="card-header py-3">
        <h4 class="my-0 fw-normal">Ветки</h4>
      </div>
      <div class="list-group list-group-checkable">
        @{
          int i = 0;
          foreach (var branchTuple in Model)
          {
            var id = $"radio_{branchTuple.GetName().IfNone("None")}";
            <input class="list-group-item-check" type="radio" name="listGroupCheckableRadios" id=@id value="" checked>
            <label class="list-group-item py-3" for=@id>
              @branchTuple.GetName().IfNone("Ручная сборка или без меты") (@Html.CreateStatus(branchTuple.GetStatus()))
              <span class="d-block small opacity-50">@branchTuple.LocalBuild.Match(b=>$"Хеш {b.GetFresh().CommitHash} от {b.GetFresh().CreatedTime.Date}", "")</span>
            </label>
            i++;
          }
        }
      </div>
    </div>
    <div class="col-sm-6 padding-0">
      <div class="card-header py-3">
        <h4 class="my-0 fw-normal">Действия</h4>
      </div>
      <div id="buttonsList">
        <button type="button" class="btn btn-outline-success btn-block" onclick="executeCommand('FetchRunCommand')">
          Обновить и запустить DemoGames
        </button>
        <button type="button" class="btn btn-block" onclick="executeCommand('FetchCommand')">
          Обновить файлы DemoGames без запуска
        </button>
        <button type="button" class="btn btn-block" onclick="executeCommand('RunCommand')">
          Запустить DemoGames
        </button>
        <button type="button" class="btn btn-block" onclick="executeCommand('LocalOpenFolderCommand')">
          Открыть локальную папку с DemoGames в проводнике
          <span class="d-block small opacity-50">D:\Files</span>
        </button>
        <button type="button" class="btn btn-block" onclick="executeCommand('RemoteOpenFolderCommand')">
          Открыть удаленную папку с DemoGames в проводнике
          <span class="d-block small opacity-50">Z:\Магиум\Builds</span>
        </button>
        <button type="button" class="btn btn-block" onclick="executeCommand('DeleteCommand')">
          Удалить локально
        </button>
      </div>
    </div>
  </div>
  <button class="btn btn-primary" onclick="showDialog()">Click me</button>
  <button class="btn btn-primary" onclick="clearButtons()">Cclear buttons</button>
  <button class="btn btn-primary" onclick="getCheckedRadioName()">Log checked</button>

<script>
  async function showDialog(){
      await fetch("/api/Branch/", {method: 'POST'});
  }
  
  function clearButtons(){
      let list = document.getElementById("buttonsList");
      let child = list.lastElementChild; 
        while (child) {
            list.removeChild(child);
            child = list.lastElementChild;
        }
  }
  
  function getCheckedRadioName(){
    let id = document.querySelector('input[name="listGroupCheckableRadios"]:checked').id.replace("radio_", "");
    console.log(id);
  }
  
  async function executeCommand(commandName){
    let commandBody = {
      command: "commandName",
      branch: "NotImpl"
    };
    await fetch("/Command/Execute", {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(commandBody)
    });
  }
</script>